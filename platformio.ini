; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html


[platformio]
default_envs = esp32

[env:esp32]
platform = espressif32
board = esp32doit-devkit-v1
framework = arduino
monitor_speed = 115200
upload_speed = 115200
board_build.partitions = min_spiffs.csv
board_build.filesystem = littlefs
; Uncomment this line to allow for remote upgrade. If name resolution does not work for you, replace with the IP of ESPAltherma
; upload_port = ESPAltherma.local

lib_deps = 
	PubSubClient
	ESP Async WebServer
	ArduinoJson

build_flags = 
	-D COMPONENT_EMBED_TXTFILES=webui/index.html:webui/main.js:webui/pico.min.css

[env:m5stickc]
platform = espressif32
board = m5stick-c
framework = arduino
monitor_speed = 115200
upload_speed = 115200
board_build.partitions = min_spiffs.csv
board_build.filesystem = littlefs
; Uncomment this line to allow for remote upgrade. If name resolution does not work for you, replace with the IP of ESPAltherma
; upload_port = ESPAltherma.local

lib_deps = 
	M5StickC
	PubSubClient
	ESP Async WebServer
	ArduinoJson
	
build_flags = 
	-D ARDUINO_M5Stick_C
	-D COMPONENT_EMBED_TXTFILES=webui/index.html:webui/main.js:webui/pico.min.css

[env:m5stickcplus]
platform = espressif32
board = m5stick-c
framework = arduino
monitor_speed = 115200
upload_speed = 115200
board_build.partitions = min_spiffs.csv
board_build.filesystem = littlefs
; Uncomment this line to allow for remote upgrade. If name resolution does not work for you, replace with the IP of ESPAltherma
; upload_port = ESPAltherma.local

lib_deps = 
	M5StickCPlus
	PubSubClient
	ESP Async WebServer
	ArduinoJson

build_flags = 
	-D ARDUINO_M5Stick_C_Plus 
	-D COMPONENT_EMBED_TXTFILES=webui/index.html:webui/main.js:webui/pico.min.css