; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html


[platformio]
default_envs = esp32

[env]
platform = espressif32
framework = arduino
monitor_speed = 115200
upload_speed = 115200
board_build.partitions = min_spiffs.csv
board_build.filesystem = littlefs
extra_scripts = 
	pre:prep_webui_folder.py
  	post:clean_webui_folder.py

lib_deps = 
	PubSubClient
	ESP Async WebServer
	ArduinoJson

build_flags = 
	-D COMPONENT_EMBED_FILES=webui/index.html.gz:webui/main.js.gz:webui/md5.min.js.gz:webui/pico.min.css.gz:webui/main.css.gz

[env:esp32]
board = esp32doit-devkit-v1

[env:esp32 OTA]
extends = env:esp32

; Uncomment this line to allow for remote upgrade. If name resolution does not work for you, replace with the IP of ESPAltherma
upload_protocol = espota
upload_port = ESPAltherma

[env:m5stickc]
board = m5stick-c

lib_deps = 
	${env.lib_deps}
	M5StickC
	
build_flags = 
	${env.build_flags}
	-D ARDUINO_M5Stick_C

[env:m5stickc OTA]
extends = env:m5stickc

; Uncomment this line to allow for remote upgrade. If name resolution does not work for you, replace with the IP of ESPAltherma
upload_protocol = espota
upload_port = ESPAltherma

[env:m5stickcplus]
board = m5stick-c

lib_deps = 
	${env.lib_deps}
	M5StickCPlus

build_flags = 
	${env.build_flags}
	-D ARDUINO_M5Stick_C_Plus

[env:m5stickcplus OTA]
extends = env:m5stickcplus

; Uncomment this line to allow for remote upgrade. If name resolution does not work for you, replace with the IP of ESPAltherma
upload_protocol = espota
upload_port = ESPAltherma