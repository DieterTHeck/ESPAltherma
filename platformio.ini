; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html


[platformio]
default_envs = esp32

[env:nodemcuv2]
platform = espressif8266
framework = arduino
board = nodemcuv2
monitor_speed = 115200
upload_speed = 921600
build_flags = -D_GNU_SOURCE
lib_deps =
	PubSubClient

[env:esp32]
platform = espressif32
board = esp32doit-devkit-v1
framework = arduino
monitor_speed = 115200
upload_speed = 115200
; Uncomment this line to allow for remote upgrade. If name resolution does not work for you, replace with the IP of ESPAltherma
; upload_port = ESPAltherma.local
; Uncomment this line if you want to define the protocol. Autodetected otherwise.
; upload_protocol = espota

lib_deps =
	PubSubClient

[env:m5stickc]
platform = espressif32
board = m5stick-c
framework = arduino
monitor_speed = 115200
upload_speed = 115200
; Uncomment this line to allow for remote upgrade. If name resolution does not work for you, replace with the IP of ESPAltherma
; upload_port = ESPAltherma.local
; Uncomment this line if you want to define the protocol. Autodetected otherwise.
; upload_protocol = espota
lib_deps =
	M5StickC
	PubSubClient

[env:m5stickcplus]
platform = espressif32
board = m5stick-c
framework = arduino
monitor_speed = 115200
upload_speed = 115200
; Uncomment this line to allow for remote upgrade. If name resolution does not work for you, replace with the IP of ESPAltherma
; upload_port = ESPAltherma.local
; Uncomment this line if you want to define the protocol. Autodetected otherwise.
; upload_protocol = espota

lib_deps =
	M5StickCPlus
	PubSubClient

build_flags = "-D ARDUINO_M5Stick_C_Plus"

[env:native]
# Used to run unit test; g++ must be in PATH.
platform = native
build_flags = "-std=c++11"

[env:esp32c3]
platform = espressif32
#	https://github.com/platformio/platform-espressif32.git#feature/arduino-idf-master
platform_packages = 
	framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git#2.0.2
    platformio/tool-esptoolpy @ https://github.com/tasmota/esptool/releases/download/v3.2/esptool-v3.2.zip
framework = arduino
board = esp32dev
board_build.mcu = esp32c3
board_build.partitions = default.csv # ben√∂tigt for OTA
board_build.variant = esp32c3
board_build.f_cpu = 160000000L
board_build.f_flash = 80000000L
board_build.flash_mode = dio
board_build.arduino.ldscript = esp32c3_out.ld
build_unflags = 
	-DARDUINO_ESP32_DEV
	-DARDUINO_VARIANT="esp32"
build_flags = 
	-DARDUINO_ESP32C3_DEV
	-DARDUINO_VARIANT="esp32c3"
lib_ldf_mode = deep+
lib_deps = 
	adafruit/Adafruit NeoPixel #^1.10.6
	PubSubClient
	m5stack/M5Unified #@^0.0.7
#monitor_speed = 115200
#monitor_filters = time
#upload_speed = 115200
#upload_resetmethod = nodemcu
#upload_port = COM9
# OTA upload
; Uncomment this line to allow for remote upgrade. If name resolution does not work for you, replace with the IP of ESPAltherma
#upload_port = ESPAltherma.local 
#upload_port = 192.168.178.60
; Uncomment this line if you want to define the protocol. Autodetected otherwise.
#upload_protocol = espota
#upload_flags =
#   --port=3232
#   --host_port=35709
#   --timeout=

[env:esp32c3_new]
platform = espressif32
framework = arduino
board = adafruit_qtpy_esp32c3
lib_deps =
	${env.lib_deps}
	PubSubClient
	adafruit/Adafruit NeoPixel
	m5stack/M5Unified
lib_ldf_mode = deep+
build_flags =
	${env.build_flags}
	-D NO_BLUETOOTH
	-D esp32c3